{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js/./src/frequencies.ts","webpack://js/./src/DefaultModel.ts","webpack://js/./src/ControlsView.ts","webpack://js/./src/Mapping.ts","webpack://js/./src/SpectrumView.ts","webpack://js/./src/CursorView.ts","webpack://js/./src/MainController.ts","webpack://js/./src/SignalFactory.ts","webpack://js/./src/Biquad.ts","webpack://js/./src/Equaliser.ts","webpack://js/./src/FourierStrategy.ts","webpack://js/./src/SerialStrategy.ts","webpack://js/./src/main.ts"],"sourcesContent":["export const eq_freq: ReadonlyArray<number> = [\n\t25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200,\n\t250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000,\n\t2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000\n];\n","import { Model, SignalType, EqBand, Cursor, AnalysisStrategy } from './Types';\nimport { eq_freq } from './frequencies';\n\nconst INITIAL_G = 0;\nconst INITIAL_Q = 1;\n\nexport class DefaultModel implements Model {\n\tpublic q: number = INITIAL_Q;\n\tpublic eq: Array<EqBand> = eq_freq.map((f, i) => ({ i, f, g: INITIAL_G, q: INITIAL_Q }));\n\tpublic cursor: Cursor = { cursor_f: 0, cursor_db: 0, value_db: null };\n\t/* (freq, db)... */\n\tpublic spectrum: Float32Array = new Float32Array(0);\n\n\tprivate interpolate_db(f: number): number | null {\n\t\tconst spectrum = this.spectrum;\n\t\tfor (let i = 0; i < spectrum.length - 2; i += 2) {\n\t\t\tconst f0 = spectrum[i];\n\t\t\tconst f1 = spectrum[i + 2];\n\t\t\tif (f >= f0 && f <= f1 && f1 > f0) {\n\t\t\t\tconst lerp = (f - f0) / (f1 - f0);\n\t\t\t\tconst db0 = spectrum[i + 1];\n\t\t\t\tconst db1 = spectrum[i + 3];\n\t\t\t\treturn db0 + lerp * (db1 - db0);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate update_cursor() {\n\t\tthis.cursor.value_db = this.interpolate_db(this.cursor.cursor_f);\n\t}\n\n\tprivate async update_eq() {\n\t\tconst t0 = +new Date();\n\t\tthis.spectrum = await this.strategy.calculate(this.eq);\n\t\tthis.update_cursor();\n\t\tconst t1 = +new Date();\n\t\tconsole.log(`Calculation took ${t1 - t0} ms`);\n\t}\n\n\tprivate readonly init: Promise<void>;\n\n\tconstructor(\n\t\tprivate readonly strategy: AnalysisStrategy\n\t) {\n\t\tthis.init = this.update_eq();\n\t}\n\n\tasync set_q(value: number) {\n\t\tawait this.init;\n\t\tthis.q = value\n\t\tfor (const band of this.eq) {\n\t\t\tband.q = value;\n\t\t}\n\t\tawait this.update_eq();\n\t}\n\n\tasync set_gain(band: number, value: number) {\n\t\tawait this.init;\n\t\tthis.eq[band].g = value;\n\t\tawait this.update_eq();\n\t}\n\n\tasync set_cursor(cursor_f: number, cursor_db: number) {\n\t\tawait this.init;\n\t\tthis.cursor = { cursor_f, cursor_db, value_db: null };\n\t\tthis.update_cursor();\n\t}\n\n}\n","import { Model, Controller, View } from './Types';\nimport { eq_freq } from './frequencies';\n\nconst _ = require('lodash');\nconst d3 = require('d3');\n\nconst max_updates_per_second = 20;\n\nfunction debounce(fn) {\n\treturn _.debounce(fn, 1000 / max_updates_per_second, { leading: false, trailing: true });\n}\n\nexport class ControlsView implements View {\n\n\tconstructor(\n\t\tprivate readonly model: Model\n\t) {\n\t}\n\n\tprivate set_q(controller: Controller, value: number) {\n\t\tcontroller.set_q(Math.pow(10, value / 10))\n\t\t\t.catch(console.error);\n\t}\n\n\tprivate set_gain(controller: Controller, index: number, value: number) {\n\t\tcontroller.set_gain(index, value)\n\t\t\t.catch(console.error);\n\t}\n\n\tprivate readonly debounced_set_q = debounce(this.set_q);\n\tprivate readonly debounced_set_gain = debounce(this.set_gain);\n\n\tbind(controller: Controller) {\n\t\t/* Bandwidth */\n\t\tconst q = d3.select(\"aside\")\n\t\t\t.selectAll(\"label.control.q\")\n\t\t\t.data([1])\n\t\t\t.enter()\n\t\t\t\t.append(\"label\")\n\t\t\t\t.attr(\"class\", \"control q\")\n\t\t\t\t;\n\t\tq.append(\"span\")\n\t\t\t.attr(\"class\", \"control-name q\")\n\t\t\t.text(\"q\")\n\t\t\t;\n\t\tq.append(\"input\")\n\t\t\t.attr(\"class\", \"slider q\")\n\t\t\t.attr(\"type\", \"range\")\n\t\t\t.attr(\"min\", \"-10\")\n\t\t\t.attr(\"max\", \"10\")\n\t\t\t.attr(\"value\", 0)\n\t\t\t.on(\"input\", (e) => this.debounced_set_q(controller, e.currentTarget.value));\n\t\t\t;\n\t\tq.append(\"span\")\n\t\t\t.attr(\"class\", \"control-value q\")\n\t\t\t.text(\"\")\n\t\t\t;\n\t\t/* Gain */\n\t\tconst bars = d3.select(\"aside\")\n\t\t\t.selectAll(\"label.control.eq.g\")\n\t\t\t.data(eq_freq.map((x, i) => ({ x, i })))\n\t\t\t.enter()\n\t\t\t\t.append(\"label\")\n\t\t\t\t.attr(\"class\", \"control eq g\")\n\t\t\t\t;\n\t\tbars.append(\"span\")\n\t\t\t.attr(\"class\", \"control-name eq\")\n\t\t\t.text(({ x }) => x < 1000 ? `${x}` : `${x / 1000}k`)\n\t\t\t;\n\t\tbars.append(\"input\")\n\t\t\t.attr(\"class\", \"slider eq\")\n\t\t\t.attr(\"type\", \"range\")\n\t\t\t.attr(\"min\", \"-32\")\n\t\t\t.attr(\"max\", \"32\")\n\t\t\t.attr(\"value\", 0)\n\t\t\t.on(\"input\", (e, { i }) => this.debounced_set_gain(controller, i, e.currentTarget.value))\n\t\t\t;\n\t\tbars.append(\"span\")\n\t\t\t.attr(\"class\", \"control-value eq\")\n\t\t\t.text(\"\")\n\t\t\t;\n\t}\n\n\tasync update() {\n\t\tconst model = this.model;\n\t\t/* Bandwidth */\n\t\tconst q = d3.select(\"aside\")\n\t\t\t.selectAll(\"label.control.q\")\n\t\t\t.data([model.q])\n\t\t\t;\n\t\tq.select(\".slider.q\")\n\t\t\t.attr(\"value\", x => Math.round(Math.log10(model.q) * 10))\n\t\t\t;\n\t\tq.select(\".control-value.q\")\n\t\t\t.text(x => x.toFixed(1))\n\t\t\t;\n\t\t/* Gain */\n\t\tconst controls = d3.select(\"aside\")\n\t\t\t.selectAll(\"label.control.eq\")\n\t\t\t.data(model.eq)\n\t\t\t;\n\t\tcontrols\n\t\t\t.select(\".slider.eq\")\n\t\t\t.attr(\"value\", x => x.g)\n\t\t\t;\n\t\tcontrols\n\t\t\t.select(\".control-value.eq\")\n\t\t\t.text(x => `${x.g}dB`)\n\t\t\t;\n\t}\n\n}\n","import { Config } from './Types';\n\nconst padding = 0.01;\nconst nonpadding = 1 - (2 * padding);\n\nexport class Mapping {\n\n\tpublic readonly fmin: number;\n\tpublic readonly fmax: number;\n\n\tpublic readonly width: number;\n\tpublic readonly height: number;\n\n\tconstructor(\n\t\tprivate readonly config: Config,\n\t\tcanvas: HTMLCanvasElement | null = null,\n\t\tpublic readonly db_min: number = -60,\n\t\tpublic readonly db_max: number = +60,\n\t) {\n\t\tthis.fmin = 10;\n\t\tthis.fmax = Math.min(20000, config.rate / 2);\n\t\tthis.width = canvas?.width ?? 0;\n\t\tthis.height = canvas?.height ?? 0;\n\t}\n\n\tproject(x: number, y: number): [number, number] {\n\t\tconst { width, height } = this;\n\t\treturn [\n\t\t\t(x * nonpadding + padding) * width,\n\t\t\t(y * nonpadding + padding) * height\n\t\t];\n\t}\n\n\tlevel_to_db(level: number): number {\n\t\tconst { db_min, db_max } = this;\n\t\treturn Math.min(db_max, Math.max(db_min, 20 * Math.log10(level)));\n\t}\n\n\ti_to_f(i: number): number {\n\t\tconst { rate, size } = this.config;\n\t\treturn i * rate / size;\n\t}\n\n\tf_to_i(f: number): number {\n\t\tconst { size, rate } = this.config;\n\t\treturn Math.min(size / 2 - 1, Math.max(0, Math.round(f * size / rate)));\n\t}\n\n\tproject_x(x: number, xmin: number, xmax: number): number {\n\t\tconst lx = Math.log(x);\n\t\tconst lmin = Math.log(xmin);\n\t\tconst lmax = Math.log(xmax);\n\t\treturn (lx - lmin) / (lmax - lmin);\n\t}\n\n\tproject_f(f: number): number {\n\t\treturn this.project_x(f, this.fmin, this.fmax);\n\t}\n\n\tproject_db(db: number): number {\n\t\tconst { db_min, db_max } = this;\n\t\treturn (db_max - db) / (db_max - db_min);\n\t}\n\n\tunproject(u: number, v: number): [number, number] {\n\t\tconst { width, height } = this;\n\t\treturn [\n\t\t\t(u / width - padding) / nonpadding,\n\t\t\t(v / height - padding) / nonpadding,\n\t\t];\n\t}\n\n\tunproject_f(u: number): number {\n\t\tconst { fmin, fmax } = this;\n\t\tconst lmin = Math.log(fmin);\n\t\tconst lmax = Math.log(fmax);\n\t\treturn Math.exp(u * (lmax - lmin) + lmin);\n\t}\n\n\tunproject_i(u: number): number {\n\t\tconst { size, rate } = this.config;\n\t\tconst f = this.unproject_f(u);\n\t\treturn this.f_to_i(Math.round(f * size / rate));\n\t}\n\n\tunproject_db(v: number): number {\n\t\tconst { db_min, db_max } = this;\n\t\treturn db_max - (v * (db_max - db_min));\n\t}\n\n}\n","import { Config, Model, Controller, View } from './Types';\nimport { Mapping } from './Mapping';\n\nconst _ = require('lodash');\nconst d3 = require('d3');\n\nexport class SpectrumView implements View {\n\n\tprivate readonly node: HTMLCanvasElement;\n\tprivate readonly context: CanvasRenderingContext2D;\n\n\tconstructor(\n\t\tprivate readonly config: Readonly<Config>,\n\t\tprivate readonly model: Model\n\t) {\n\t\tconst viewer = d3.select(\".viewer\");\n\t\tthis.node = viewer.node() as HTMLCanvasElement;\n\t\tthis.context = this.node.getContext('2d') as CanvasRenderingContext2D;\n\t}\n\n\tprivate onresize() {\n\t\tconst width = this.node.clientWidth;\n\t\tconst height = this.node.clientHeight;\n\t\tconst ratio = window.devicePixelRatio;\n\t\tthis.node.width = Math.round(width * ratio);\n\t\tthis.node.height = Math.round(height * ratio);\n\t\tthis.update();\n\t}\n\n\tprivate onmovecursor(controller: Controller, clientX: number, clientY: number) {\n\t\tconst viewer = d3.select(\".viewer\").node() as HTMLCanvasElement;\n\t\tconst { rate, size } = this.config;\n\t\tconst mapping = new Mapping(this.config, viewer);\n\t\tconst [x, y] = mapping.unproject(clientX * devicePixelRatio, clientY * devicePixelRatio);\n\t\tconst f = mapping.unproject_f(x);\n\t\tconst db = mapping.unproject_db(y);\n\t\tcontroller.set_cursor(f, db);\n\t}\n\n\tprivate onmousemove(controller: Controller, e: MouseEvent) {\n\t\tif (e.buttons & 1) {\n\t\t\tthis.onmovecursor(controller, e.clientX, e.clientY);\n\t\t}\n\t}\n\n\tprivate ontouchmove(controller: Controller, e: TouchEvent) {\n\t\tconst touch = e.touches.item(0);\n\t\tif (touch === null) {\n\t\t\treturn;\n\t\t}\n\t\tthis.onmovecursor(controller, touch.clientX, touch.clientY);\n\t}\n\n\tbind(controller: Controller) {\n\t\tconst observer = new ResizeObserver(_.debounce(() => this.onresize(), 40, { leading: true, trailing: true }));\n\t\tobserver.observe(this.node);\n\t\tthis.node.addEventListener('mousedown', (e) => this.onmousemove(controller, e));\n\t\tthis.node.addEventListener('mousemove', (e) => this.onmousemove(controller, e));\n\t\tthis.node.addEventListener('touchstart', (e) => this.ontouchmove(controller, e));\n\t\tthis.node.addEventListener('touchmove', (e) => this.ontouchmove(controller, e));\n\t}\n\n\tasync update() {\n\t\tconst config = this.config;\n\t\tconst model = this.model;\n\t\tconst node = this.node;\n\t\tconst ctx = this.context;\n\t\tconst width = node.width;\n\t\tconst height = node.height;\n\t\tctx.clearRect(0, 0, width, height);\n\t\tconst mapping = new Mapping(config, node);\n\t\tconst { db_min, db_max } = mapping;\n\t\tctx.globalCompositeOperation = \"lighter\";\n\t\t{\n\t\t\t/* Spectrum */\n\t\t\tctx.lineWidth = 2;\n\t\t\tctx.strokeStyle = \"red\";\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(...mapping.project(mapping.project_f(mapping.fmin), mapping.project_db(0)));\n\t\t\tconst spectrum = model.spectrum;\n\t\t\tfor (let i = 0; i < spectrum.length; i += 2) {\n\t\t\t\tconst f = spectrum[i];\n\t\t\t\tconst db = spectrum[i + 1];\n\t\t\t\tif (f >= mapping.fmin && f <= mapping.fmax) {\n\t\t\t\t\tctx.lineTo(...mapping.project(mapping.project_f(f), mapping.project_db(db)));\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.stroke();\n\t\t}\n\t\t{\n\t\t\t/* EQ profile */\n\t\t\tctx.strokeStyle = \"orange\";\n\t\t\tctx.lineWidth = 4;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(...mapping.project(mapping.project_f(mapping.fmin), mapping.project_db(0)));\n\t\t\tfor (const { f, g } of model.eq) {\n\t\t\t\tctx.lineTo(...mapping.project(mapping.project_f(f), mapping.project_db(g)));\n\t\t\t}\n\t\t\tctx.lineTo(...mapping.project(mapping.project_f(mapping.fmax), mapping.project_db(0)));\n\t\t\tctx.stroke();\n\t\t\t/* Points */\n\t\t\tctx.lineWidth = 6;\n\t\t\tfor (const { f, g } of model.eq) {\n\t\t\t\tconst [x, y] = mapping.project(mapping.project_f(f), mapping.project_db(g));\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(x - 1 / width, y - 1 / height, 2 / width, 2 / height);\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\t/* Frequency gridlines */\n\t\t\tfor (let f = mapping.fmin; f < mapping.fmax; f *= 10) {\n\t\t\t\tfor (let d = 1; d < 10 && f * d < mapping.fmax; d++) {\n\t\t\t\t\tctx.lineWidth = d == 1 ? 4 : 2;\n\t\t\t\t\tctx.strokeStyle = d == 1 ? \"blue\" : \"green\";\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(...mapping.project(mapping.project_f(f * d), 0));\n\t\t\t\t\tctx.lineTo(...mapping.project(mapping.project_f(f * d), 1));\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\t/* Level gridlines */\n\t\t\tfor (let g = Math.ceil(db_min / 6) * 6; g <= db_max; g += 6) {\n\t\t\t\tctx.lineWidth = g == 0 ? 4 : 2;\n\t\t\t\tctx.strokeStyle = g == 0 ? \"blue\" : \"green\";\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(...mapping.project(0, mapping.project_db(g)));\n\t\t\t\tctx.lineTo(...mapping.project(1, mapping.project_db(g)));\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\t/* Bounds */\n\t\t\tctx.lineWidth = 4;\n\t\t\tctx.strokeStyle = \"silver\";\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(...mapping.project(0, 0));\n\t\t\tctx.lineTo(...mapping.project(1, 0));\n\t\t\tctx.lineTo(...mapping.project(1, 1));\n\t\t\tctx.lineTo(...mapping.project(0, 1));\n\t\t\tctx.lineTo(...mapping.project(0, 0));\n\t\t\tctx.stroke();\n\t\t}\n\t\t{\n\t\t\t/* Cursor */\n\t\t\tconst cursor = model.cursor;\n\t\t\tctx.lineWidth = 8;\n\t\t\tctx.strokeStyle = \"cyan\";\n\t\t\tconst f = cursor.cursor_f;\n\t\t\tconst db = cursor.cursor_db;\n\t\t\tconst vdb = cursor.value_db;\n\t\t\tconst [cx, cy] = mapping.project(mapping.project_f(f), mapping.project_db(db));\n\t\t\t{\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(cx - 1 / width, cy - 1 / height, 2 / width, 2 / height);\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t\tif (vdb !== null) {\n\t\t\t\tctx.setLineDash([4, 4]);\n\t\t\t\tconst [vx, vy] = mapping.project(mapping.project_f(f), mapping.project_db(vdb));\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(vx - 1 / width, vy - 1 / height, 2 / width, 2 / height);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.lineWidth = 2;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(cx, cy);\n\t\t\t\tctx.lineTo(vx, vy);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.setLineDash([]);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Model, Controller, View } from \"./Types\";\n\nconst d3 = require(\"d3\");\n\nexport class CursorView implements View {\n\n\tprivate readonly node: d3.Selection<HTMLElement, {}, HTMLElement, any>;\n\n\tconstructor(\n\t\tprivate readonly model: Model\n\t) {\n\t\tthis.node = d3.select(\".cursor\");\n\t}\n\n\tbind(controller: Controller) {\n\t\tthis.node\n\t\t\t.append(\"span\")\n\t\t\t.attr(\"class\", \"cursor-x\")\n\t\t\t;\n\t\tthis.node\n\t\t\t.append(\"span\")\n\t\t\t.attr(\"class\", \"cursor-y\")\n\t\t\t;\n\t\tthis.node\n\t\t\t.append(\"span\")\n\t\t\t.attr(\"class\", \"cursor-v\")\n\t\t\t;\n\t}\n\n\tasync update() {\n\t\tconst { cursor_f, cursor_db, value_db } = this.model.cursor;\n\t\tthis.node.select(\".cursor-x\")\n\t\t\t.text(`x: ${cursor_f.toFixed(0)} Hz`)\n\t\t\t;\n\t\tthis.node.select(\".cursor-y\")\n\t\t\t.text(`y: ${cursor_db.toFixed(2)} dB`)\n\t\t\t;\n\t\tthis.node.select(\".cursor-v\")\n\t\t\t.text(`value: ${value_db?.toFixed(2) ?? \"-\"} dB`)\n\t\t\t;\n\t}\n\n}\n","import { Signals, Cursor, Config, Model, Controller, View } from './Types';\n\nexport class MainController implements Controller {\n\n\tconstructor(\n\t\tprivate readonly config: Readonly<Config>,\n\t\tprivate readonly model: Model,\n\t\tprivate readonly views: ReadonlyArray<View>\n\t) {\n\t\tfor (const view of this.views) {\n\t\t\tview.bind(this);\n\t\t}\n\t\tthis.update();\n\t}\n\n\tprivate next_view_update: number | null = null;\n\n\tprivate async update() {\n\t\tconst t0 = +new Date();\n\t\tawait new Promise((resolve, reject) => {\n\t\t\tif (this.next_view_update !== null) {\n\t\t\t\tcancelAnimationFrame(this.next_view_update);\n\t\t\t}\n\t\t\tthis.next_view_update = requestAnimationFrame(() => {\n\t\t\t\tthis.next_view_update = null;\n\t\t\t\tPromise.all(this.views.map(view => view.update()))\n\t\t\t\t\t.then(resolve, reject);\n\t\t\t});\n\t\t});\n\t\tconst t1 = +new Date();\n\t\tconsole.log(`UI update took ${t1 - t0} ms`);\n\t}\n\n\tasync set_q(value: number) {\n\t\tawait this.model.set_q(value);\n\t\tawait this.update();\n\t}\n\n\tasync set_gain(index: number, value: number) {\n\t\tawait this.model.set_gain(index, value);\n\t\tawait this.update();\n\t}\n\n\tasync set_cursor(cursor_f: number, cursor_db: number) {\n\t\tawait this.model.set_cursor(cursor_f, cursor_db);\n\t\tawait this.update();\n\t}\n\n}\n","import { Config, SignalType, Signal, Signals } from './Types';\n\nexport class SignalFactory {\n\n\tconstructor(private readonly config: Pick<Config, \"size\" | \"rate\">) {\n\t}\n\n\tgenerate_all(): Signals {\n\t\treturn {\n\t\t\tnoise: this.generate_noise(),\n\t\t\tpure: this.generate_sine(this.config.rate / 4),\n\t\t}\n\t}\n\n\tgenerate_noise(): Signal {\n\t\tconst { size } = this.config;\n\t\tconst signal = new Float32Array(size);\n\t\tfor (let i = 0; i < size; ++i) {\n\t\t\tsignal[i] += (2 * Math.random() - 1) * Math.sqrt(size) * 2;\n\t\t}\n\t\treturn signal;\n\t}\n\n\tgenerate_sinusoid(f: number, phase: number = 0): Signal {\n\t\tconst { size, rate } = this.config;\n\t\tconst signal = new Float32Array(size);\n\t\tfor (let i = 0; i < size; ++i) {\n\t\t\tsignal[i] = Math.sin(2 * Math.PI * f * i / rate + phase)\n\t\t}\n\t\treturn signal;\n\t}\n\n\tgenerate_sine(f: number): Signal {\n\t\treturn this.generate_sinusoid(f, 0);\n\t}\n\n\tgenerate_cosine(f: number): Signal {\n\t\treturn this.generate_sinusoid(f, Math.PI / 2);\n\t}\n\n};\n","export class Biquad {\n\n\tprivate xz1: number = 0;\n\tprivate xz2: number = 0;\n\n\tprivate yz1: number = 0;\n\tprivate yz2: number = 0;\n\n\tconstructor (\n\t\tpublic readonly a1: number = 0,\n\t\tpublic readonly a2: number = 0,\n\t\tpublic readonly b0: number = 0,\n\t\tpublic readonly b1: number = 0,\n\t\tpublic readonly b2: number = 0\n\t) {\n\t}\n\n\tpublic static create_bandpass(freq: number, gain: number, q: number, rate: number): Biquad {\n\t\tconst A = Math.pow(10, gain / 40);\n\t\tconst w = 2 * Math.PI * freq / rate;\n\t\tconst sn = Math.sin(w);\n\t\tconst cs = Math.cos(w);\n\t\tconst a = sn / (2 * q);\n\t\tconst a0 = 1 + a / A;\n\t\tconst a1 = -2 * cs;\n\t\tconst a2 = 1 - a / A;\n\t\tconst b0 = 1 + a * A;\n\t\tconst b1 = -2 * cs;\n\t\tconst b2 = 1 - a * A;\n\t\treturn new Biquad(a1 / a0, a2 / a0, b0 / a0, b1 / a0, b2 / a0);\n\t}\n\n\tpublic reset() {\n\t\tthis.xz1 = 0;\n\t\tthis.xz2 = 0;\n\t\tthis.yz1 = 0;\n\t\tthis.yz2 = 0;\n\t}\n\n\tpublic apply(signal: Float32Array) {\n\t\tconst a1 = this.a1;\n\t\tconst a2 = this.a2;\n\t\tconst b0 = this.b0;\n\t\tconst b1 = this.b1;\n\t\tconst b2 = this.b2;\n\t\tlet xz1 = this.xz1;\n\t\tlet xz2 = this.xz1;\n\t\tlet yz1 = this.yz1;\n\t\tlet yz2 = this.yz2;\n\t\tconst N = signal.length;\n\t\tconst ys = new Float32Array(N);\n\t\tfor (let i = 0; i < N; ++i) {\n\t\t\tconst x = signal[i];\n\t\t\tconst y = x * b0 + xz1 * b1 + xz2 * b2 - yz1 * a1 - yz2 * a2\n\t\t\tsignal[i] = y;\n\t\t\txz2 = xz1;\n\t\t\txz1 = x;\n\t\t\tyz2 = yz1;\n\t\t\tyz1 = y;\n\t\t}\n\t\tthis.xz1 = xz1;\n\t\tthis.xz2 = xz1;\n\t\tthis.yz1 = yz1;\n\t\tthis.yz2 = yz2;\n\t}\n\n}\n","import { Config, EqBand } from './Types';\nimport { Biquad } from './Biquad';\n\nexport class Equaliser {\n\n\tprivate readonly filters: Array<Biquad>;\n\n\tconstructor(config: Pick<Config, \"rate\">, bands: ReadonlyArray<EqBand>) {\n\t\tconst { rate } = config;\n\t\tthis.filters = bands.map(({ f, g, q }) => Biquad.create_bandpass(f, g, q, rate));\n\t}\n\n\tapply(signal: Float32Array) {\n\t\tfor (const filter of this.filters) {\n\t\t\tfilter.apply(signal);\n\t\t}\n\t}\n\n}\n","import { AnalysisStrategy, Config, Model, SignalType, EqBand, Signal } from './Types';\nimport { Mapping } from './Mapping';\nimport { SignalFactory } from './SignalFactory';\nimport { Equaliser } from './Equaliser';\n\nimport FFT from 'fft.js';\n\nexport class FourierStrategy implements AnalysisStrategy {\n\n\tprivate readonly fft: typeof FFT;\n\tprivate readonly signal: Signal;\n\tprivate readonly baseline: Readonly<Float32Array>;\n\n\tprivate get_spectrum(signal: Readonly<Float32Array>): Float32Array {\n\t\tconst mapping = new Mapping(this.config);\n\t\tconst { size } = this.config;\n\t\tconst transform = new Float32Array(size * 2);\n\t\t(this.fft as any).realTransform(transform, [...signal]);\n\t\tconst result = new Float32Array(size);\n\t\tfor (let i = 0; i < size; i += 2) {\n\t\t\tconst level = Math.hypot(transform[i], transform[i + 1]) / Math.sqrt(signal.length) / 128;\n\t\t\tresult[i] = mapping.i_to_f(i / 2);\n\t\t\tresult[i + 1] = level;\n\t\t}\n\t\treturn result;\n\t}\n\n\tconstructor(\n\t\tprivate readonly config: Config,\n\t) {\n\t\tthis.fft = new (FFT as any)(config.size);\n\t\tthis.signal = new SignalFactory(config).generate_noise();\n\t\tthis.baseline = this.get_spectrum(this.signal);\n\t}\n\n\tasync calculate(bands: ReadonlyArray<EqBand>): Promise<Float32Array> {\n\t\tconst mapping = new Mapping(this.config);\n\t\tconst { size } = this.config;\n\t\tconst signal = new Float32Array(this.signal);\n\t\tconst eq = new Equaliser(this.config, bands);\n\t\teq.apply(signal);\n\t\tconst spectrum = this.get_spectrum(signal);\n\t\tfor (let i = 1; i < spectrum.length; i += 2) {\n\t\t\tspectrum[i] = mapping.level_to_db(spectrum[i] / this.baseline[i]);\n\t\t}\n\t\treturn spectrum;\n\t}\n\n}\n","import { AnalysisStrategy, Config, Model, Signals, EqBand } from './Types';\nimport { Mapping } from './Mapping';\nimport { Equaliser } from './Equaliser';\nimport { SignalFactory } from './SignalFactory';\nimport { SerialRequest, SerialInitRequest, SerialJobRequest, SerialResponse, SerialJobResponse } from './SerialTypes';\n\ntype JobSerial = number;\n\nconst worker_request_timeout_ms = 10000;\n\nconst points_per_decade = 20;\n\nexport class SerialStrategy implements AnalysisStrategy {\n\n\tprivate readonly workers: ReadonlyArray<Worker>;\n\tprivate job_serial: JobSerial = 1;\n\tprivate callbacks: Map<JobSerial, (result: SerialJobResponse) => void> = new Map();\n\n\tconstructor(\n\t\tprivate readonly config: Config,\n\t) {\n\t\tconst { rate } = this.config;\n\t\tconst mapping = new Mapping(this.config);\n\t\tconst lmin = Math.log10(mapping.fmin);\n\t\tconst lmax = Math.log10(mapping.fmax);\n\t\tconst pts = points_per_decade * (lmax - lmin);\n\t\tthis.workers = new Array(Math.ceil(pts) + 1).fill(0).map((_, i) => {\n\t\t\tconst lm = i / points_per_decade + lmin;\n\t\t\tconst freq = Math.pow(10, lm);\n\t\t\tconst worker = new Worker(new URL('./SerialWorker', import.meta.url));\n\t\t\tworker.onmessage = ({ data }: MessageEvent<SerialResponse>) => {\n\t\t\t\tconst id = data.id;\n\t\t\t\tthis.callbacks.get(id)?.(data);\n\t\t\t};\n\t\t\tworker.postMessage(<SerialInitRequest> { type: 'init', config, freq });\n\t\t\treturn worker;\n\t\t});\n\t}\n\n\tprivate submit_job(worker: Worker, bands: ReadonlyArray<EqBand>): Promise<SerialJobResponse> {\n\t\treturn new Promise<SerialJobResponse>((resolve, reject) => {\n\t\t\tconst id = this.job_serial++;\n\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\tthis.callbacks.delete(id);\n\t\t\t\treject(new Error('Worker timed out'));\n\t\t\t}, worker_request_timeout_ms);\n\t\t\tthis.callbacks.set(id, (value) => {\n\t\t\t\tthis.callbacks.delete(id);\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\tresolve(value);\n\t\t\t});\n\t\t\tworker.postMessage(<SerialJobRequest> { type: 'job', id, bands });\n\t\t});\n\t}\n\n\tasync calculate(bands: ReadonlyArray<EqBand>): Promise<Float32Array> {\n\t\tconst worker_results = await Promise.all(\n\t\t\tthis.workers.map(\n\t\t\t\tworker => this.submit_job(worker, bands)\n\t\t\t)\n\t\t);\n\t\tconst mapping = new Mapping(this.config);\n\t\tconst result = new Float32Array(worker_results.length * 2);\n\t\tlet out_it = 0;\n\t\tfor (const { freq, db } of worker_results) {\n\t\t\tresult[out_it++] = freq;\n\t\t\tresult[out_it++] = db;\n\t\t}\n\t\treturn result;\n\t}\n\n}\n","import { Config, AnalysisStrategyName, AnalysisStrategy } from './Types';\nimport { DefaultModel } from './DefaultModel';\nimport { ControlsView } from './ControlsView';\nimport { SpectrumView } from './SpectrumView';\nimport { CursorView } from './CursorView';\nimport { MainController } from './MainController';\nimport { FourierStrategy } from './FourierStrategy';\nimport { SerialStrategy } from './SerialStrategy';\n\nfunction start() {\n\tconst strategy_name = (window.location.hash.replace(/^#/, '') as AnalysisStrategyName) || 'fourier';\n\n\tconst config: Config = {\n\t\t'fourier': { rate: 65536, size: 32768 },\n\t\t'sines': { rate: 60000, size: 20000 },\n\t}[strategy_name];\n\n\tconst strategy: AnalysisStrategy = {\n\t\t'fourier': () => new FourierStrategy(config),\n\t\t'sines': () => new SerialStrategy(config)\n\t}[strategy_name]();\n\n\tconst model = new DefaultModel(strategy);\n\n\tconst controls_view = new ControlsView(model);\n\tconst cursor_view = new CursorView(model);\n\tconst spectrum_view = new SpectrumView(config, model);\n\tconst views = [controls_view, cursor_view, spectrum_view];\n\n\tconst controller = new MainController(config, model, views);\n}\n\nstart();\n"],"names":["eq_freq","DefaultModel","constructor","strategy","q","eq","map","f","i","g","cursor","cursor_f","cursor_db","value_db","spectrum","Float32Array","this","init","update_eq","interpolate_db","length","f0","f1","lerp","db0","update_cursor","t0","Date","calculate","t1","console","log","set_q","value","band","set_gain","set_cursor","_","d3","debounce","fn","leading","trailing","ControlsView","model","debounced_set_q","debounced_set_gain","controller","Math","pow","catch","error","index","bind","select","selectAll","data","enter","append","attr","text","on","e","currentTarget","bars","x","update","round","log10","toFixed","controls","padding","nonpadding","Mapping","config","canvas","db_min","db_max","fmin","fmax","min","rate","width","height","project","y","level_to_db","level","max","i_to_f","size","f_to_i","project_x","xmin","xmax","lx","lmin","project_f","project_db","db","unproject","u","v","unproject_f","lmax","exp","unproject_i","unproject_db","SpectrumView","viewer","node","context","getContext","onresize","clientWidth","clientHeight","ratio","window","devicePixelRatio","onmovecursor","clientX","clientY","mapping","onmousemove","buttons","ontouchmove","touch","touches","item","ResizeObserver","observe","addEventListener","ctx","clearRect","globalCompositeOperation","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","rect","d","ceil","vdb","cx","cy","setLineDash","vx","vy","CursorView","MainController","views","next_view_update","view","Promise","resolve","reject","cancelAnimationFrame","requestAnimationFrame","all","then","SignalFactory","generate_all","noise","generate_noise","pure","generate_sine","signal","random","sqrt","generate_sinusoid","phase","sin","PI","generate_cosine","Biquad","a1","a2","b0","b1","b2","xz1","xz2","yz1","yz2","static","freq","gain","A","w","sn","cs","cos","a","a0","reset","apply","N","Equaliser","bands","filters","create_bandpass","filter","FourierStrategy","fft","baseline","get_spectrum","transform","realTransform","result","hypot","SerialStrategy","job_serial","callbacks","Map","pts","workers","Array","fill","lm","worker","Worker","URL","onmessage","id","get","postMessage","type","submit_job","timeout","setTimeout","delete","Error","set","clearTimeout","worker_results","out_it","strategy_name","location","hash","replace","controls_view","cursor_view","spectrum_view","start"],"sourceRoot":""}